##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   22/Jun/2016  18:27:58 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\task\t #
#                          ask_usbdev.c                                      #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\api\   #
#                          -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\dis #
#                          play\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\display\lcd\ -I E:\Juchen\CW6687G\JC_M_328_201 #
#                          60617_P0\APP\display\lcdseg\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\led\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\display\ledseg\ -I E:\Juchen\CW6687G\JC_M_328 #
#                          _20160617_P0\APP\display\no\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\config #
#                          \ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\c #
#                          ommon\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\task\ -I E:\Juchen\CW6687G\JC_M_328_20160617_ #
#                          P0\APP\user\ -I E:\Juchen\CW6687G\JC_M_328_201606 #
#                          17_P0\APP\user\mp3res\ -I                         #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\btstac #
#                          k\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\ #
#                          user\user_config\ -I E:\Juchen\CW6687G\JC_M_328_2 #
#                          0160617_P0\APP\user\user_iis\ -lC                 #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\ -o E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\Debug\Obj\ -e -z9 --debug --core=plain         #
#                          --dptr=16,1 --data_model=large                    #
#                          --code_model=banked --calling_convention=ext_stac #
#                          k_reentrant --place_constants=code                #
#                          --nr_virtual_regs 20 --extended_stack             #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\task\t #
#                          ask_usbdev.c                                      #
#    List file          =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\task_usbdev.lst                              #
#    Object file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          Obj\task_usbdev.r51                               #
#                                                                            #
#                                                                            #
##############################################################################

E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\task\task_usbdev.c
      1          /*****************************************************************************
      2           * Module    : Task
      3           * File      : task_usbdev.c
      4           * Author    : Hanny
      5           * Function  : 读卡器任务
      6           *****************************************************************************/
      7          #include "include.h"
      8          
      9          #if TASK_USBDEV_EN
     10          #include "task.h"
     11          #include "task_usbdev.h"
     12          
     13          void task_usbdev_vol_down(void);
     14          void task_usbdev_vol_up(void);
     15          type_task_usbdev t_usbdev;
     16          extern u8 usb_audiobuf[194];
     17          #include SET_USER_PATH(CFG_UI_USBDEV_DIR, /ui/ui_usbdev.c)
     18          
     19          //判断播放状态，0:暂停  1:播放
     20          #pragma location="TASK_USBDEV_SEG"
     21          u8 task_hid_status(void)
     22          {
     23              u8 ret = 0;
     24              static u8 cnt = 0,mute_flag = 0;
     25              static u32 u_pow = 0; //buf能量检测
     26          
     27              if(cnt < 10){
     28                  if(u_pow == voice_power((u8*)usb_audiobuf, 97)){
     29                      mute_flag++;
     30                  }
     31                  u_pow = voice_power((u8*)usb_audiobuf, 97);//更新能量值
     32                  cnt++;
     33              }else{
     34                  cnt = 0;
     35                  if(mute_flag > 8){ //检测到能量大于8次没有变化=暂停，mute住系统
     36                      if(!sys_ctl.mute_flag){
     37                          sys_mute();
     38                      }
     39                      ret = 0;
     40                  }else{  //播放状态，系统可能被mute住，解mute
     41                      if(sys_ctl.mute_flag){
     42                          sys_unmute();
     43                      }
     44                          ret = 1;
     45                  }
     46                  mute_flag = 0;
     47              }
     48              return ret; //cnt = 10 才会返回正确的值
     49          }
     50          
     51          //任务初始化
     52          #pragma location="TASK_USBDEV_SEG"
     53          void task_usbdev_enter(void)
     54          {
     55              led_mode_off();
     56              led_idle();
     57              set_sys_clk(SYS_48M);
     58              set_lcd_buf(LCD_FULL_MODE);
     59              usb_dev_flag = 0;
     60              if (!device_activate(DEVICE_PC)) {
     61                  task_ctl.work_sta = TASK_EXIT;      //设备无效，返回主菜单
     62                  msgbox(STR_DISCONNECTED_PC, NULL, MSGBOX_TIME);
     63                  if(task_ctl.work_sta != TASK_USBDEV)
     64                  {
     65                      return;
     66                  }
     67              }
     68          #if BT_ALL_TASK
     69              bt_close();
     70          #endif
     71              usb_dev_flag = 1;
     72              draw_clear();
     73              task_ctl.work_sta = TASK_USBDEV;
     74              dac_enable();
     75          #if WARNING_TASK_USBDEV
     76              mp3_res_play_wait(RES_MP3_PC_MODE);
     77          #endif
     78              //加载USB CardReader程序
     79              load_code(0x40, 3);
     80              memset(adc_buf, 0, USBMIC_SAMPLES*2);
     81              pcm_init(S_SPR_48000);
     82              AUCON10 |= BIT(7);
     83              FIFO_SPEED = 0;
     84              adc_init(SEL_USBMIC);
     85              usb_audio_set_volume(sys_ctl.volume);       //设置默认音量
     86              if (!usb_dev_init(USBDEV_ENUM_TYPE)) {
     87                  task_ctl.work_sta = TASK_EXIT;      //设备初始化失败，返回主菜单
     88                  msgbox(STR_USB_DEVICE_ERROR, NULL, MSGBOX_TIME);
     89                  return;
     90              }
     91          #if MIC_DIRECT_OUT_EN
     92              mic_direct_out_enter(MIC_CHANNEL_SEL,11);
     93          #endif
     94              pcm_play();
     95              t_usbdev.opt_status = OPT_NONE;
     96              t_usbdev.disp_opt = 0xff;                     //更新显示
     97              t_usbdev.disp_volume = 0xff;
     98              t_usbdev.first_key = 0;
     99              t_usbdev.vol_flag = 0;
    100          }
    101          
    102          //任务退出
    103          #pragma location="TASK_USBDEV_SEG"
    104          void task_usbdev_exit(void)
    105          {
    106              if(sys_ctl.mute_flag){ //防止暂停时系统被mute住
    107                  sys_unmute();
    108              }
    109          #if MODE_CHANGE_BLUE_ON
    110              led_mode_on();
    111          #endif
    112              usb_dev_exit();
    113              adc_stop();
    114              pcm_stop();
    115          	adc_exit();
    116          #if MIC_DIRECT_OUT_EN
    117              mic_direct_out_exit();
    118          #endif
    119              dac_disable();
    120          #if BT_ALL_TASK
    121              if(usb_dev_flag)
    122              {
    123                  user_bt_init();
    124                  bt_connect();                                           //进入蓝牙任务，发起回连
    125                  sys_ctl.bt_sta = bt_status_get();
    126                  sys_ctl.connected = (sys_ctl.bt_sta >= BT_STA_CONNECTED) ? 1 : 0;
    127              }
    128          #endif
    129              usb_dev_flag = 0;
    130          }
    131          
    132          //任务事务处理
    133          #pragma location="TASK_USBDEV_SEG"
    134          void task_usbdev_event(void)
    135          {
    136              WATCHDOG_CLR();
    137              task_hid_status();
    138              if (!device_activate(DEVICE_PC)) {
    139          #if MP3BT_DECT_EN
    140                  if(MP3BT_DECT_IS_BT()){
    141                      task_ctl.work_sta = TASK_BT;
    142                  }
    143                  else{
    144                      task_ctl.work_sta = TASK_EXIT;      //设备无效，返回主菜单
    145                  }
    146          #else
    147                  task_ctl.work_sta = TASK_EXIT;      //设备无效，返回主菜单
    148          #endif
    149                  return;
    150              }
    151              if (!t_usbdev.first_key) {                  //自动发送下一曲按键
    152                  t_usbdev.first_key = usb_hid_set(USB_AUDIO_NEXTFILE);
    153              }
    154              usb_dev_event();                        //执行USB设备事务
    155              t_usbdev.opt_status = usb_get_opt();        //获取当前的读写状态
    156          }
    157          
    158          #pragma location="TASK_USBDEV_SEG"
    159          void task_usbdev_vol_up(void)
    160          {
    161              usb_hid_set(USB_AUDIO_VOLUP);
    162              t_usbdev.disp_update = 1;
    163              ocx_show_cnt = 0;
    164          }
    165          #pragma location="TASK_USBDEV_SEG"
    166          void task_usbdev_vol_down(void)
    167          {
    168              usb_hid_set(USB_AUDIO_VOLDOWN);
    169              t_usbdev.disp_update = 1;
    170              ocx_show_cnt = 0;
    171          }
    172          
    173          
    174          #pragma constseg="TASK_USBDEV_SEG_CONST"
    175          IAR_CONST char str_show_taskusbdev[] = "task_usbdev\n";
    176          #pragma constseg=default
    177          
    178          //任务主流程
    179          #pragma location="TASK_USBDEV_SEG"
    180          void task_usbdev(void)
    181          {u16 usb_audio_get_vol(u8 vol_type);
    182              u8 msg;
    183              printf(str_show_taskusbdev);
    184              task_usbdev_enter();
    185              while (task_ctl.work_sta == TASK_USBDEV) {
    186                  msg = get_msg();
    187                  task_usbdev_event();
    188                  task_usbdev_deal_msg(msg);
    189                  task_usbdev_display();
    190              }
    191              task_usbdev_exit();
    192          }
    193          #endif


   Segment part sizes:

     Function/Label Bytes
     -------------- -----

 
 
 0 bytes of memory

Errors: none
Warnings: none
