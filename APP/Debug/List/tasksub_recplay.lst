##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   23/Feb/2016  10:53:43 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\新唐\6687G\APP\task\sub\tasksub_recplay.c      #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          E:\新唐\6687G\APP\api\ -I                         #
#                          E:\新唐\6687G\APP\display\ -I                     #
#                          E:\新唐\6687G\APP\display\lcd\ -I                 #
#                          E:\新唐\6687G\APP\display\lcdseg\ -I              #
#                          E:\新唐\6687G\APP\display\led\ -I                 #
#                          E:\新唐\6687G\APP\display\ledseg\ -I              #
#                          E:\新唐\6687G\APP\display\no\ -I                  #
#                          E:\新唐\6687G\APP\config\ -I                      #
#                          E:\新唐\6687G\APP\common\ -I                      #
#                          E:\新唐\6687G\APP\task\ -I                        #
#                          E:\新唐\6687G\APP\user\ -I                        #
#                          E:\新唐\6687G\APP\user\mp3res\ -I                 #
#                          E:\新唐\6687G\APP\btstack\ -I                     #
#                          E:\新唐\6687G\APP\user\user_config\ -I            #
#                          E:\新唐\6687G\APP\user\user_iis\ -lC              #
#                          E:\新唐\6687G\APP\Debug\List\ -o                  #
#                          E:\新唐\6687G\APP\Debug\Obj\ -e -z9 --debug       #
#                          --core=plain --dptr=16,1 --data_model=large       #
#                          --code_model=banked --calling_convention=ext_stac #
#                          k_reentrant --place_constants=code                #
#                          --nr_virtual_regs 20 --extended_stack             #
#                          E:\新唐\6687G\APP\task\sub\tasksub_recplay.c      #
#    List file          =  E:\新唐\6687G\APP\Debug\List\tasksub_recplay.lst  #
#    Object file        =  E:\新唐\6687G\APP\Debug\Obj\tasksub_recplay.r51   #
#                                                                            #
#                                                                            #
##############################################################################

E:\新唐\6687G\APP\task\sub\tasksub_recplay.c
      1          /*****************************************************************************
      2           * Module    : TaskSub
      3           * File      : tasksub_recplay.c
      4           * Author    : Hanny
      5           * Function  : 录音任务 - 录音播放
      6           *****************************************************************************/
      7          #ifdef TASK_SUB
      8          
      9          //任务初始化
     10          void tasksub_recplay_enter(void)
     11          {
     12          #if IIS_EN && AUX_RECORD_EN
     13              adc_stop();
     14          #else
     15              adc_exit();
     16          #endif
     17              if (task_ctl.work_sta == TASK_AUX) {
     18                  amux_stop();
     19              }
     20              ocx_clear();
     21              draw_wait();
     22              led_music_play();
     23             // dac_enable();
     24              user_change_volume(sys_ctl.volume);     //数字音量
     25          
     26              dac_enable();
     27              sys_unmute();
     28              t_rec.aux_mute = 0;
     29          
     30              t_msc.disp_music_time.sec = 0xff;
     31              t_msc.disp_flag = 1;
     32              t_msc.music_type = TYPE_WAV;
     33              t_msc.music_total = 1;
     34              t_msc.music_num = 1;
     35              //播放信息初始化
     36              t_msc.pause = 0;
     37              if (play_record_file()) {
     38                  music_play();
     39              } else {
     40                  //printf("file Not valid!\n");
     41                  music_stop();
     42              }
     43              ocx_init(tasksub_recplay_event, NULL);       //设置OCX需要响应的消息及事件
     44          }
     45          
     46          //任务退出
     47          void tasksub_recplay_exit(void)
     48          {
     49              music_stop();
     50              dac_disable();
     51              ocx_clear();
     52              if (task_ctl.work_sta == TASK_MIC) {
     53                  adc_init(SEL_RECMIC);
     54              } else {
     55          #if IIS_EN && AUX_RECORD_EN
     56                  //重新初始化FM IIS功能
     57                  work_sta_interrupt = TASK_FM;
     58                  task_aux_eq_enter();
     59          #else
     60                  adc_init(SEL_RECAUX);
     61          #endif
     62              }
     63          }
     64          
     65          #pragma location="TASK_MUSIC_SEG"
     66          void tasksub_recplay_loop(void)
     67          {
     68              u8 msg;
     69              while ((task_ctl.work_sta == TASK_MIC  || task_ctl.work_sta == TASK_AUX) && music_get_status() > STATUS_PLAY_STOPPING) {
     70                  tasksub_recplay_event();
     71                  while (msg = get_msg()) {
     72                      tasksub_recplay_deal_msg(msg);
     73                  }
     74                  task_music_display();
     75              }
     76          }
     77          
     78          //任务主流程
     79          void tasksub_recplay(void)
     80          {
     81              tasksub_recplay_enter();
     82              tasksub_recplay_loop();
     83              tasksub_recplay_exit();
     84          }
     85          #endif


   Segment part sizes:

     Function/Label Bytes
     -------------- -----

 
 
 0 bytes of memory

Errors: none
Warnings: none
