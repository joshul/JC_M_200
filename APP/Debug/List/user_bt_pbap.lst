##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   22/Jun/2016  18:27:59 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\u #
#                          ser_bt_pbap.c                                     #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\api\   #
#                          -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\dis #
#                          play\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\display\lcd\ -I E:\Juchen\CW6687G\JC_M_328_201 #
#                          60617_P0\APP\display\lcdseg\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\led\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\display\ledseg\ -I E:\Juchen\CW6687G\JC_M_328 #
#                          _20160617_P0\APP\display\no\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\config #
#                          \ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\c #
#                          ommon\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\task\ -I E:\Juchen\CW6687G\JC_M_328_20160617_ #
#                          P0\APP\user\ -I E:\Juchen\CW6687G\JC_M_328_201606 #
#                          17_P0\APP\user\mp3res\ -I                         #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\btstac #
#                          k\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\ #
#                          user\user_config\ -I E:\Juchen\CW6687G\JC_M_328_2 #
#                          0160617_P0\APP\user\user_iis\ -lC                 #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\ -o E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\Debug\Obj\ -e -z9 --debug --core=plain         #
#                          --dptr=16,1 --data_model=large                    #
#                          --code_model=banked --calling_convention=ext_stac #
#                          k_reentrant --place_constants=code                #
#                          --nr_virtual_regs 20 --extended_stack             #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\u #
#                          ser_bt_pbap.c                                     #
#    List file          =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\user_bt_pbap.lst                             #
#    Object file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          Obj\user_bt_pbap.r51                              #
#                                                                            #
#                                                                            #
##############################################################################

E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\user_bt_pbap.c
      1          /*****************************************************************************
      2           * Module    : User
      3           * File      : user_bt_pbap.c
      4           * Author    : junwen
      5           * Function  : 蓝牙PBAP操作接口
      6           *****************************************************************************/
      7          #include "include.h"
      8          #include "user_bt_pbap.h"

   \                                 In segment XDATA_Z, align 1, keep-with-next
   \   000000                REQUIRE __INIT_XDATA_Z
      9          u16 phonebook_total_num;
   \                     phonebook_total_num:
   \   000000                DS 2
     10          
     11          #define DBG_BT_PBAP_EN      1
     12          
     13          

   \                                 In segment BT_PBAP_XDATA, align 1, root
     14          IAR_XDATA_A u8 phonebook_name_number[40+24] @"BT_PBAP_XDATA";
   \                     phonebook_name_number:
   \   000000                DS 64
     15          
     16          #pragma constseg="BT_PBAP_API_CONST"

   \                                 In segment BT_PBAP_API_CONST, align 1
     17          IAR_CONST char str_show_pb_get_finish[] = "phonebook_get_finish: Index-%d , total_item-%ld\n";
   \                     str_show_pb_get_finish:
   \   000000   70686F6E     DB "phonebook_get_finish: Index-%d , total_item-%ld\012"
   \            65626F6F
   \            6B5F6765
   \            745F6669
   \            6E697368
   \            3A20496E
   \            6465782D
   \            2564202C
   \            20746F74
   \            616C5F69
   \            74656D2D
   \            256C640A
   \            00      
     18          #pragma constseg="BT_PBAP_CONST_SEG"

   \                                 In segment BT_PBAP_CONST_SEG, align 1
     19          IAR_CONST char str_show_pb_get_stop[] = "phonebook_get_stop: Index-%d , current_item-%ld\n";
   \                     str_show_pb_get_stop:
   \   000000   70686F6E     DB "phonebook_get_stop: Index-%d , current_item-%ld\012"
   \            65626F6F
   \            6B5F6765
   \            745F7374
   \            6F703A20
   \            496E6465
   \            782D2564
   \            202C2063
   \            75727265
   \            6E745F69
   \            74656D2D
   \            256C640A
   \            00      
     20          #pragma constseg=default
     21          
     22          
     23          /******************************************************************************************************
     24          函数功能：电话本信息获取一个联系人信息完成;
     25                    电话本名字与电话本号码为字符型UTF-8编码，字符串结束为'\0';
     26          		  电话本名字长度最大为40字节，电话本号码长度最大为24字节，名字与号码的最后一个字节一直为'\0';
     27          		  每条记录占用字节为64字节;
     28          入口参数：(1)、contacts_buf：电话本信息缓冲区指针;
     29                    (2)、itemCnt：该次电话本信息记录数量，最大值为8;
     30                         一个联系人可能有多个名字及多个号码信息，itemCnt即为其个数，最多为8个；
     31                    (3)、phone_sim_index：电话本类型，0为手机电话本，1为SIM卡电话本;
     32          ******************************************************************************************************/
     33          #pragma location="BT_PBAP_BANK_SEG"

   \                                 In segment BT_PBAP_BANK_SEG, align 1, keep-with-next
     34          void phonebook_get_one_contacts_finish(PHONEBOOK_ITEM *contacts_buf, u8 itemCnt, u8 phone_sim_index)
   \                     phonebook_get_one_contacts_finish:
     35          {
   \   000000   7406         MOV     A,#0x6
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 9
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 2,R1
     36              /*if(!phonebook_total_num){   //开始获取电话本时先擦除SPI相应电话本信息参数区
     37                  spi_phonebook_erase();
     38          #if DBG_BT_PBAP_EN
     39                  printf("spi_pb_erase\n");
     40          #endif
     41              }*/
     42          
     43          #if DBG_BT_PBAP_EN
     44              for(u8 i=0; i<itemCnt; i++) {
   \   00000B   75..00       MOV     ?V0 + 0,#0x0
   \   00000E   8039         SJMP    ??phonebook_get_one_contacts_finish_0
     45                  printf("PB:%s:%s\n",contacts_buf[i].pbName,contacts_buf[i].pbNum);
   \                     ??phonebook_get_one_contacts_finish_1:
   \   000010   85....       MOV     ?V0 + 4,?V0 + 0
   \   000013   75..00       MOV     ?V0 + 5,#0x0
   \   000016   7406         MOV     A,#0x6
   \   000018   78..         MOV     R0,#?V0 + 4
   \   00001A   12....       LCALL   ?S_SHL
   \   00001D   EE           MOV     A,R6
   \   00001E   25..         ADD     A,?V0 + 4
   \   000020   F582         MOV     DPL,A
   \   000022   EF           MOV     A,R7
   \   000023   35..         ADDC    A,?V0 + 5
   \   000025   F583         MOV     DPH,A
   \   000027                ; Setup parameters for call to function my_printf
   \   000027   E582         MOV     A,DPL
   \   000029   2428         ADD     A,#0x28
   \   00002B   F8           MOV     R0,A
   \   00002C   E583         MOV     A,DPH
   \   00002E   3400         ADDC    A,#0x0
   \   000030   F9           MOV     R1,A
   \   000031   E8           MOV     A,R0
   \   000032   C0E0         PUSH    A
   \   000034   E9           MOV     A,R1
   \   000035   C0E0         PUSH    A
   \   000037   C082         PUSH    DPL
   \   000039   C083         PUSH    DPH
   \   00003B   7A..         MOV     R2,#(`?<Constant "PB:%s:%s\\n">` & 0xff)
   \   00003D   7B..         MOV     R3,#((`?<Constant "PB:%s:%s\\n">` >> 8) & 0xff)
   \   00003F   12....       LCALL   my_printf & 0xFFFF
   \   000042   74FC         MOV     A,#-0x4
   \   000044   12....       LCALL   ?DEALLOC_EXT_STACK8
     46                  //printf_array(contacts_buf[i].pbName,40);
     47                  //printf_array(contacts_buf[i].pbNum,24);
     48              }
   \   000047   05..         INC     ?V0 + 0
   \                     ??phonebook_get_one_contacts_finish_0:
   \   000049   E5..         MOV     A,?V0 + 0
   \   00004B   C3           CLR     C
   \   00004C   95..         SUBB    A,?V0 + 2
   \   00004E   40C0         JC      ??phonebook_get_one_contacts_finish_1
     49          #endif
     50          
     51              for(u8 i=0; i<itemCnt; i++){
   \   000050   75..00       MOV     ?V0 + 3,#0x0
   \   000053   801C         SJMP    ??phonebook_get_one_contacts_finish_2
     52                  if((phonebook_total_num+i) >= 1024) break;  //最多保存1024条电话本信息
     53                  spi_phonebook_write((u8 *)&contacts_buf[i], phonebook_total_num+i);
   \                     ??phonebook_get_one_contacts_finish_3:
   \   000055                ; Setup parameters for call to function spi_phonebook_write
   \   000055   75..00       MOV     ?V0 + 1,#0x0
   \   000058   7406         MOV     A,#0x6
   \   00005A   78..         MOV     R0,#?V0 + 0
   \   00005C   12....       LCALL   ?S_SHL
   \   00005F   EE           MOV     A,R6
   \   000060   25..         ADD     A,?V0 + 0
   \   000062   FA           MOV     R2,A
   \   000063   EF           MOV     A,R7
   \   000064   35..         ADDC    A,?V0 + 1
   \   000066   FB           MOV     R3,A
   \   000067   90....       MOV     DPTR,#(spi_phonebook_write & 0xffff)
   \   00006A   74..         MOV     A,#((spi_phonebook_write >> 16) & 0xff)
   \   00006C   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
   \   00006F   05..         INC     ?V0 + 3
   \                     ??phonebook_get_one_contacts_finish_2:
   \   000071   E5..         MOV     A,?V0 + 3
   \   000073   C3           CLR     C
   \   000074   95..         SUBB    A,?V0 + 2
   \   000076   5018         JNC     ??phonebook_get_one_contacts_finish_4
   \   000078   90....       MOV     DPTR,#phonebook_total_num
   \   00007B   85....       MOV     ?V0 + 0,?V0 + 3
   \   00007E   E0           MOVX    A,@DPTR
   \   00007F   25..         ADD     A,?V0 + 0
   \   000081   FC           MOV     R4,A
   \   000082   A3           INC     DPTR
   \   000083   E0           MOVX    A,@DPTR
   \   000084   3400         ADDC    A,#0x0
   \   000086   FD           MOV     R5,A
   \   000087   C3           CLR     C
   \   000088   EC           MOV     A,R4
   \   000089   9400         SUBB    A,#0x0
   \   00008B   ED           MOV     A,R5
   \   00008C   9404         SUBB    A,#0x4
   \   00008E   40C5         JC      ??phonebook_get_one_contacts_finish_3
     54          #if 0//DBG_BT_PBAP_EN
     55                  spi_phonebook_read(phonebook_name_number, phonebook_total_num+i);
     56                  printf("Read_PB:%s:%s\n",phonebook_name_number,&phonebook_name_number[40]);
     57          #endif
     58              }
     59              phonebook_total_num += itemCnt;
   \                     ??phonebook_get_one_contacts_finish_4:
   \   000090   90....       MOV     DPTR,#phonebook_total_num
   \   000093   E0           MOVX    A,@DPTR
   \   000094   25..         ADD     A,?V0 + 2
   \   000096   F0           MOVX    @DPTR,A
   \   000097   A3           INC     DPTR
   \   000098   E0           MOVX    A,@DPTR
   \   000099   3400         ADDC    A,#0x0
   \   00009B   F0           MOVX    @DPTR,A
     60          }
   \   00009C   7F06         MOV     R7,#0x6
   \   00009E   02....       LJMP    ?BANKED_LEAVE_SP
     61          
     62          /******************************************************************************
     63          函数功能：电话本信息获取完成；
     64          入口参数：(1)、phone_sim_index：电话本类型，0为手机电话本，1为SIM卡电话本;
     65                    (2)、total_item：本次电话本信息获取总条目
     66          ******************************************************************************/
     67          #pragma location="BT_PBAP_API"

   \                                 In segment BT_PBAP_API, align 1, keep-with-next
     68          void phonebook_get_finish(u8 phone_sim_index, u32 total_item)
   \                     phonebook_get_finish:
     69          {
   \   000000   7408         MOV     A,#0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   8A..         MOV     ?V0 + 4,R2
   \   000009   8B..         MOV     ?V0 + 5,R3
   \   00000B   8C..         MOV     ?V0 + 6,R4
   \   00000D   8D..         MOV     ?V0 + 7,R5
     70              sys_param_write16(PARAM_PHONEBOOK_NUM, phonebook_total_num);
   \   00000F                ; Setup parameters for call to function spi_param_write16
   \   00000F   90....       MOV     DPTR,#phonebook_total_num
   \   000012   E0           MOVX    A,@DPTR
   \   000013   FC           MOV     R4,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FD           MOV     R5,A
   \   000017   7A29         MOV     R2,#0x29
   \   000019   7900         MOV     R1,#0x0
   \   00001B   90....       MOV     DPTR,#(spi_param_write16 & 0xffff)
   \   00001E   74..         MOV     A,#((spi_param_write16 >> 16) & 0xff)
   \   000020   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
     71          #if DBG_BT_PBAP_EN
     72              printf(str_show_pb_get_finish, phone_sim_index, total_item);
   \   000023                ; Setup parameters for call to function my_printf
   \   000023   78..         MOV     R0,#?V0 + 4
   \   000025   12....       LCALL   ?PUSH_ISTACK_I_FOUR
   \   000028   F5..         MOV     ?V0 + 1,A
   \   00002A   C0..         PUSH    ?V0 + 0
   \   00002C   C0..         PUSH    ?V0 + 1
   \   00002E   7A..         MOV     R2,#(str_show_pb_get_finish & 0xff)
   \   000030   7B..         MOV     R3,#((str_show_pb_get_finish >> 8) & 0xff)
   \   000032   12....       LCALL   my_printf & 0xFFFF
   \   000035   74FA         MOV     A,#-0x6
   \   000037   12....       LCALL   ?DEALLOC_EXT_STACK8
     73          #endif
     74          }
   \   00003A   7F08         MOV     R7,#0x8
   \   00003C   02....       LJMP    ?BANKED_LEAVE_SP
     75          
     76          /******************************************************************************
     77          函数功能：电话本信息获取中止；
     78          入口参数：(1)、phone_sim_index：电话本类型，0为手机电话本，1为SIM卡电话本;
     79                    (2)、current_item：当前已获取条目
     80          ******************************************************************************/
     81          #pragma location="BT_PBAP_SEG"

   \                                 In segment BT_PBAP_SEG, align 1, keep-with-next
     82          void phonebook_get_stop(u8 phone_sim_index, u32 current_item)
   \                     phonebook_get_stop:
     83          {
   \   000000   7408         MOV     A,#0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 0,R1
   \   000007   8A..         MOV     ?V0 + 4,R2
   \   000009   8B..         MOV     ?V0 + 5,R3
   \   00000B   8C..         MOV     ?V0 + 6,R4
   \   00000D   8D..         MOV     ?V0 + 7,R5
     84              sys_param_write16(PARAM_PHONEBOOK_NUM, phonebook_total_num);
   \   00000F                ; Setup parameters for call to function spi_param_write16
   \   00000F   90....       MOV     DPTR,#phonebook_total_num
   \   000012   E0           MOVX    A,@DPTR
   \   000013   FC           MOV     R4,A
   \   000014   A3           INC     DPTR
   \   000015   E0           MOVX    A,@DPTR
   \   000016   FD           MOV     R5,A
   \   000017   7A29         MOV     R2,#0x29
   \   000019   7900         MOV     R1,#0x0
   \   00001B   90....       MOV     DPTR,#(spi_param_write16 & 0xffff)
   \   00001E   74..         MOV     A,#((spi_param_write16 >> 16) & 0xff)
   \   000020   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
     85          #if DBG_BT_PBAP_EN
     86              printf(str_show_pb_get_stop, phone_sim_index, current_item);
   \   000023                ; Setup parameters for call to function my_printf
   \   000023   78..         MOV     R0,#?V0 + 4
   \   000025   12....       LCALL   ?PUSH_ISTACK_I_FOUR
   \   000028   F5..         MOV     ?V0 + 1,A
   \   00002A   C0..         PUSH    ?V0 + 0
   \   00002C   C0..         PUSH    ?V0 + 1
   \   00002E   7A..         MOV     R2,#(str_show_pb_get_stop & 0xff)
   \   000030   7B..         MOV     R3,#((str_show_pb_get_stop >> 8) & 0xff)
   \   000032   12....       LCALL   my_printf & 0xFFFF
   \   000035   74FA         MOV     A,#-0x6
   \   000037   12....       LCALL   ?DEALLOC_EXT_STACK8
     87          #endif
     88          }
   \   00003A   7F08         MOV     R7,#0x8
   \   00003C   02....       LJMP    ?BANKED_LEAVE_SP
     89          
     90          #pragma location="BT_PBAP_BANK_SEG"

   \                                 In segment BT_PBAP_BANK_SEG, align 1, keep-with-next
     91          u8 string_len(void *ptr, u8 maxlen)
   \                     string_len:
     92          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003                ; Saved register size: 2
   \   000003                ; Auto size: 0
   \   000003   E9           MOV     A,R1
   \   000004   FE           MOV     R6,A
     93              char *cptr = (char *)ptr;
     94              u8 i;
     95              for (i=0; i!=maxlen; i++) {
   \   000005   7900         MOV     R1,#0x0
   \   000007   8001         SJMP    ??string_len_0
   \                     ??string_len_1:
   \   000009   09           INC     R1
   \                     ??string_len_0:
   \   00000A   EE           MOV     A,R6
   \   00000B   69           XRL     A,R1
   \   00000C   6014         JZ      ??string_len_2
     96                  if (0 == *cptr++) {
   \   00000E   EA           MOV     A,R2
   \   00000F   FC           MOV     R4,A
   \   000010   EB           MOV     A,R3
   \   000011   FD           MOV     R5,A
   \   000012   8C82         MOV     DPL,R4
   \   000014   8D83         MOV     DPH,R5
   \   000016   A3           INC     DPTR
   \   000017   AA82         MOV     R2,DPL
   \   000019   AB83         MOV     R3,DPH
   \   00001B   8C82         MOV     DPL,R4
   \   00001D   8D83         MOV     DPH,R5
   \   00001F   E0           MOVX    A,@DPTR
   \   000020   70E7         JNZ     ??string_len_1
     97                      break;
     98                  }
     99              }
    100              return i;
   \                     ??string_len_2:
   \   000022   D0E0         POP     A
   \   000024   FE           MOV     R6,A
   \   000025   02....       LJMP    ?BRET
    101          }
    102          
    103          #pragma location="BT_PBAP_BANK_SEG"

   \                                 In segment BT_PBAP_BANK_SEG, align 1, keep-with-next
    104          u16 check_contacts(u8 *phone_num, u8 len)
   \                     check_contacts:
    105          {
   \   000000   7408         MOV     A,#0x8
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 11
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 2,R1
    106              u8 phone_num_len;
    107              memset(phonebook_name_number, 0, sizeof(phonebook_name_number));
   \   00000B                ; Setup parameters for call to function my_memset
   \   00000B   7C40         MOV     R4,#0x40
   \   00000D   7D00         MOV     R5,#0x0
   \   00000F   7900         MOV     R1,#0x0
   \   000011   7A..         MOV     R2,#(phonebook_name_number & 0xff)
   \   000013   7B..         MOV     R3,#((phonebook_name_number >> 8) & 0xff)
   \   000015   12....       LCALL   my_memset & 0xFFFF
    108              for(u8 i=0; i<phonebook_total_num; i++){
   \   000018   75..00       MOV     ?V0 + 3,#0x0
   \   00001B   8002         SJMP    ??check_contacts_0
   \                     ??check_contacts_1:
   \   00001D   05..         INC     ?V0 + 3
   \                     ??check_contacts_0:
   \   00001F   85..82       MOV     DPL,?V0 + 3
   \   000022   8582..       MOV     ?V0 + 0,DPL
   \   000025   90....       MOV     DPTR,#phonebook_total_num
   \   000028   E0           MOVX    A,@DPTR
   \   000029   F8           MOV     R0,A
   \   00002A   A3           INC     DPTR
   \   00002B   E0           MOVX    A,@DPTR
   \   00002C   F9           MOV     R1,A
   \   00002D   C3           CLR     C
   \   00002E   E5..         MOV     A,?V0 + 0
   \   000030   98           SUBB    A,R0
   \   000031   E4           CLR     A
   \   000032   99           SUBB    A,R1
   \   000033   504F         JNC     ??check_contacts_2
    109                  spi_phonebook_phonenum_read(phonebook_name_number, i);
   \   000035                ; Setup parameters for call to function spi_phonebook_phonenum_read
   \   000035   AC..         MOV     R4,?V0 + 0
   \   000037   7D00         MOV     R5,#0x0
   \   000039   7A..         MOV     R2,#(phonebook_name_number & 0xff)
   \   00003B   7B..         MOV     R3,#((phonebook_name_number >> 8) & 0xff)
   \   00003D   90....       MOV     DPTR,#(spi_phonebook_phonenum_read & 0xffff)
   \   000040   74..         MOV     A,#((spi_phonebook_phonenum_read >> 16) & 0xff)
   \   000042   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    110                  phone_num_len = string_len(phonebook_name_number, 24);
   \   000045                ; Setup parameters for call to function string_len
   \   000045   7918         MOV     R1,#0x18
   \   000047   7A..         MOV     R2,#(phonebook_name_number & 0xff)
   \   000049   7B..         MOV     R3,#((phonebook_name_number >> 8) & 0xff)
   \   00004B   90....       MOV     DPTR,#(string_len & 0xffff)
   \   00004E   74..         MOV     A,#((string_len >> 16) & 0xff)
   \   000050   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
   \   000053   E9           MOV     A,R1
   \   000054   F5..         MOV     ?V0 + 6,A
    111                  if(phone_num_len >= len && !memcmp(&phonebook_name_number[phone_num_len-len], phone_num, len)){
   \   000056   C3           CLR     C
   \   000057   95..         SUBB    A,?V0 + 2
   \   000059   40C2         JC      ??check_contacts_1
   \   00005B                ; Setup parameters for call to function mem_cmp
   \   00005B   A9..         MOV     R1,?V0 + 2
   \   00005D   EE           MOV     A,R6
   \   00005E   FC           MOV     R4,A
   \   00005F   EF           MOV     A,R7
   \   000060   FD           MOV     R5,A
   \   000061   89..         MOV     ?V0 + 4,R1
   \   000063   E5..         MOV     A,?V0 + 6
   \   000065   C3           CLR     C
   \   000066   95..         SUBB    A,?V0 + 4
   \   000068   FA           MOV     R2,A
   \   000069   E4           CLR     A
   \   00006A   9400         SUBB    A,#0x0
   \   00006C   FB           MOV     R3,A
   \   00006D   EA           MOV     A,R2
   \   00006E   24..         ADD     A,#(phonebook_name_number & 0xff)
   \   000070   FA           MOV     R2,A
   \   000071   EB           MOV     A,R3
   \   000072   34..         ADDC    A,#((phonebook_name_number >> 8) & 0xff)
   \   000074   FB           MOV     R3,A
   \   000075   12....       LCALL   mem_cmp & 0xFFFF
   \   000078   EA           MOV     A,R2
   \   000079   7001         JNZ     ??check_contacts_3
   \   00007B   EB           MOV     A,R3
   \                     ??check_contacts_3:
   \   00007C   709F         JNZ     ??check_contacts_1
    112                      return i;
   \   00007E   AA..         MOV     R2,?V0 + 0
   \   000080   7B00         MOV     R3,#0x0
   \   000082   8004         SJMP    ??check_contacts_4
    113                  }
    114              }
    115              return 0xffff;
   \                     ??check_contacts_2:
   \   000084   7AFF         MOV     R2,#-0x1
   \   000086   7BFF         MOV     R3,#-0x1
   \                     ??check_contacts_4:
   \   000088   7F08         MOV     R7,#0x8
   \   00008A   02....       LJMP    ?BANKED_LEAVE_SP
    116          }

   \                                 In segment CODE_C, align 1
   \                     `?<Constant "PB:%s:%s\\n">`:
   \   000000   50423A25     DB "PB:%s:%s\012"
   \            733A2573
   \            0A00    

   Maximum stack usage in bytes:

     Function                       EXT_STACK PSTACK XSTACK
     --------                       --------- ------ ------
     check_contacts                       11      0      0
       -> my_memset                       22      0      0
       -> spi_phonebook_phonenum_read
                                          22      0      0
       -> string_len                      22      0      0
       -> mem_cmp                         22      0      0
     phonebook_get_finish                 17      0      0
       -> spi_param_write16               22      0      0
       -> my_printf                       34      0      0
     phonebook_get_one_contacts_finish
                                          13      0      0
       -> my_printf                       26      0      0
       -> spi_phonebook_write             18      0      0
     phonebook_get_stop                   17      0      0
       -> spi_param_write16               22      0      0
       -> my_printf                       34      0      0
     string_len                           13      0      0


   Segment part sizes:

     Function/Label                 Bytes
     --------------                 -----
     phonebook_total_num               2
     phonebook_name_number            64
     str_show_pb_get_finish           49
     str_show_pb_get_stop             49
     phonebook_get_one_contacts_finish
                                     161
     phonebook_get_finish             63
     phonebook_get_stop               63
     string_len                       40
     check_contacts                  141
     ?<Constant "PB:%s:%s\n">         10

 
  63 bytes in segment BT_PBAP_API
  49 bytes in segment BT_PBAP_API_CONST
 342 bytes in segment BT_PBAP_BANK_SEG
  49 bytes in segment BT_PBAP_CONST_SEG
  63 bytes in segment BT_PBAP_SEG
  64 bytes in segment BT_PBAP_XDATA
  10 bytes in segment CODE_C
   2 bytes in segment XDATA_Z
 
 576 bytes of CODE  memory
  66 bytes of XDATA memory

Errors: none
Warnings: none
