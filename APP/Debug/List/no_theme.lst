##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   22/Jun/2016  18:27:54 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\no\no_theme.c                                   #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\api\   #
#                          -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\dis #
#                          play\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\display\lcd\ -I E:\Juchen\CW6687G\JC_M_328_201 #
#                          60617_P0\APP\display\lcdseg\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\led\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\display\ledseg\ -I E:\Juchen\CW6687G\JC_M_328 #
#                          _20160617_P0\APP\display\no\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\config #
#                          \ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\c #
#                          ommon\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\task\ -I E:\Juchen\CW6687G\JC_M_328_20160617_ #
#                          P0\APP\user\ -I E:\Juchen\CW6687G\JC_M_328_201606 #
#                          17_P0\APP\user\mp3res\ -I                         #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\btstac #
#                          k\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\ #
#                          user\user_config\ -I E:\Juchen\CW6687G\JC_M_328_2 #
#                          0160617_P0\APP\user\user_iis\ -lC                 #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\ -o E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\Debug\Obj\ -e -z9 --debug --core=plain         #
#                          --dptr=16,1 --data_model=large                    #
#                          --code_model=banked --calling_convention=ext_stac #
#                          k_reentrant --place_constants=code                #
#                          --nr_virtual_regs 20 --extended_stack             #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\no\no_theme.c                                   #
#    List file          =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\no_theme.lst                                 #
#    Object file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          Obj\no_theme.r51                                  #
#                                                                            #
#                                                                            #
##############################################################################

E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\display\no\no_theme.c
      1          /*****************************************************************************
      2           * Module    : No
      3           * File      : no_theme.c
      4           * Author    : Hanny
      5           * Function  : 无主题
      6           *****************************************************************************/
      7          #include "include.h"
      8          #include "task.h"
      9          
     10          #if (THEME_SELECT == THEME_NO)
     11          
     12          //等待界面
     13          #pragma location="DRAW_IMG_SEG1"
     14          void draw_wait(void)
     15          {
     16          }
     17          
     18          //清屏
     19          void draw_clear(void)
     20          {
     21          }
     22          
     23          //返回确定或取消
     24          #pragma location="MSG_BOX_SEG"
     25          bool msgbox(u16 param, u8 mode, u8 show_time)
     26          {
     27              return true;
     28          }
     29          
     30          //返回选中的值
     31          #pragma location="LIST_BOX_SEG"
     32          u8 listbox(u8 index, u8 total, u8 mode, u16 param, u8 show_time)
     33          {
     34              return 0;
     35          }
     36          
     37          #if (HARD_IR_EN || SOFT_IR_EN || SOFT_IR_PORT_INT_EN)
     38          
     39          IAR_XDATA_A struct {
     40              u8 cnt;                             //已输入的数字位数
     41              u16 value;                          //已输入的数字值
     42              u16 disp_value;                     //当前显示的数值
     43              u8 ok_flag;                         //是否按下确定键
     44          } t_num @ "OCX_XDATA";
     45          
     46          #pragma location="NUM_BOX_SEG"
     47          void numbox_event(void)
     48          {
     49              if (!comm_event()) {
     50                  t_num.ok_flag = 0xff;
     51              }
     52              if (ocx_show_cnt >= 20) {
     53                  t_num.ok_flag = 1;
     54              }
     55          }
     56          
     57          //数选框处理消息
     58          #pragma location="NUM_BOX_SEG"
     59          void numbox_deal_msg(void)
     60          {
     61              u8 msg = get_msg();
     62              switch(msg) {
     63                  //确定
     64              case KU_OK:
     65                  t_num.ok_flag = 1;
     66                  break;
     67          
     68                  //取消
     69              case KU_BACK:
     70                  t_num.ok_flag = 0xff;
     71                  break;
     72          
     73              case T_KEY_NUM_0:
     74              case T_KEY_NUM_1:
     75              case T_KEY_NUM_2:
     76              case T_KEY_NUM_3:
     77              case T_KEY_NUM_4:
     78              case T_KEY_NUM_5:
     79              case T_KEY_NUM_6:
     80              case T_KEY_NUM_7:
     81              case T_KEY_NUM_8:
     82              case T_KEY_NUM_9:
     83                  if (t_num.cnt >= 4) {
     84                      t_num.value = 0;
     85                  }
     86                  if (t_num.value == 0) {
     87                      t_num.cnt = 0;
     88                  }
     89                  t_num.value = t_num.value * 10 + (msg - T_KEY_NUM_0);
     90                  t_num.cnt++;
     91                  ocx_show_cnt = 0;
     92                  break;
     93          
     94                  //调用公共消息函数
     95              default:
     96                  deal_msg(msg);
     97                  break;
     98              }
     99          }
    100          #endif
    101          
    102          //value初始值; mode为模式
    103          //返回选中值
    104          #pragma location="NUM_BOX_SEG"
    105          u16 numbox(u8 value, u8 mode)
    106          {
    107          #if (HARD_IR_EN || SOFT_IR_EN || SOFT_IR_PORT_INT_EN)
    108              t_num.disp_value = 0xffff;
    109              t_num.ok_flag = 0;
    110              t_num.value = value;
    111              t_num.cnt = 1;
    112              ocx_show_cnt = 0;
    113          
    114              while (!t_num.ok_flag) {
    115                  numbox_event();
    116                  numbox_deal_msg();
    117              }
    118          
    119              if (t_num.ok_flag == 1) {
    120                  return t_num.value;                     //按下确定键，返回选择的值
    121              }
    122              return 0xffff;                              //返回无效值
    123          #else
    124              return 0;
    125          #endif
    126          }
    127          
    128          #pragma location="PROGRESS_SEG"
    129          u8 progressbox(u8 value, u8 min, u8 max, u32 param, u8 mode, u8 show_time)
    130          {
    131              return 0;
    132          }
    133          
    134          #endif


   Segment part sizes:

     Function/Label Bytes
     -------------- -----

 
 
 0 bytes of memory

Errors: none
Warnings: none
