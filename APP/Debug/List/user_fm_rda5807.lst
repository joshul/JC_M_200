##############################################################################
#                                                                            #
# IAR 8051 C/C++ Compiler V7.20H/W32                   22/Jun/2016  18:28:00 #
# Copyright 2004-2006 IAR Systems. All rights reserved.                      #
#                                                                            #
#    Core               =  plain                                             #
#    Code model         =  banked                                            #
#    Data model         =  large                                             #
#    Calling convention =  extended stack reentrant                          #
#    Constant location  =  code                                              #
#    Extended stack     =  enabled                                           #
#    Dptr setup         =  1,16                                              #
#    Source file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\u #
#                          ser_fm\user_fm_rda5807.c                          #
#    Command line       =  -I "C:\Program Files\IAR Systems\Embedded         #
#                          Workbench 4.05 Evaluation version\8051\INC\" -I   #
#                          "C:\Program Files\IAR Systems\Embedded Workbench  #
#                          4.05 Evaluation version\8051\INC\CLIB\" -I        #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\api\   #
#                          -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\dis #
#                          play\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\display\lcd\ -I E:\Juchen\CW6687G\JC_M_328_201 #
#                          60617_P0\APP\display\lcdseg\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\displa #
#                          y\led\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\display\ledseg\ -I E:\Juchen\CW6687G\JC_M_328 #
#                          _20160617_P0\APP\display\no\ -I                   #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\config #
#                          \ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\c #
#                          ommon\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\ #
#                          APP\task\ -I E:\Juchen\CW6687G\JC_M_328_20160617_ #
#                          P0\APP\user\ -I E:\Juchen\CW6687G\JC_M_328_201606 #
#                          17_P0\APP\user\mp3res\ -I                         #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\btstac #
#                          k\ -I E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\ #
#                          user\user_config\ -I E:\Juchen\CW6687G\JC_M_328_2 #
#                          0160617_P0\APP\user\user_iis\ -lC                 #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\ -o E:\Juchen\CW6687G\JC_M_328_20160617_P0\A #
#                          PP\Debug\Obj\ -e -z9 --debug --core=plain         #
#                          --dptr=16,1 --data_model=large                    #
#                          --code_model=banked --calling_convention=ext_stac #
#                          k_reentrant --place_constants=code                #
#                          --nr_virtual_regs 20 --extended_stack             #
#                          E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\u #
#                          ser_fm\user_fm_rda5807.c                          #
#    List file          =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          List\user_fm_rda5807.lst                          #
#    Object file        =  E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\Debug\ #
#                          Obj\user_fm_rda5807.r51                           #
#                                                                            #
#                                                                            #
##############################################################################

E:\Juchen\CW6687G\JC_M_328_20160617_P0\APP\user\user_fm\user_fm_rda5807.c
      1          /*****************************************************************************
      2           * Module    : Task
      3           * File      : user_fm_rda5807.c
      4           * Author    : Hanny
      5           * Function  : RDA 5807 驱动
      6           *****************************************************************************/
      7          #include "include.h"
      8          #include "user_fm.h"
      9          
     10          #if (FM_TYPE == FM_RDA5807)
     11          
     12          //RDA 5807 初始化表
     13          #pragma constseg="FM_INIT_CONST_RDA5807"

   \                                 In segment FM_INIT_CONST_RDA5807, align 1
     14          IAR_CONST u8 tbl_rda5807p_init[104] =           //    原来的5807SP
   \                     tbl_rda5807p_init:
   \   000000   C0010010     DB 192, 1, 0, 16, 4, 0, 136, 173, 128, 0, 118, 198, 94, 198, 0, 0, 64
   \            040088AD
   \            800076C6
   \            5EC60000
   \            40      
   \   000011   6E2D8058     DB 110, 45, 128, 88, 3, 88, 4, 88, 4, 88, 4, 0, 71, 144, 0, 245, 135
   \            03580458
   \            04580400
   \            479000F5
   \            87      
   \   000022   7F0B04F1     DB 127, 11, 4, 241, 94, 192, 65, 224, 80, 111, 85, 146, 0, 125, 16, 192
   \            5EC041E0
   \            506F5592
   \            007D10C0
   \   000032   0780411D     DB 7, 128, 65, 29, 64, 6, 31, 155, 76, 43, 129, 16, 69, 160, 25, 63
   \            40061F9B
   \            4C2B8110
   \            45A0193F
   \   000042   AF400681     DB 175, 64, 6, 129, 27, 42, 13, 4, 128, 159, 23, 138, 211, 73, 17, 66
   \            1B2A0D04
   \            809F178A
   \            D3491142
   \   000052   A0C43EBB     DB 160, 196, 62, 187, 0, 0, 88, 4, 88, 4, 88, 4, 0, 116, 61, 0, 3, 12
   \            00005804
   \            58045804
   \            00743D00
   \            030C    
   \   000064   2F683877     DB 47, 104, 56, 119
     15          {
     16              //#if defined(_SHARE_CRYSTAL_24MHz_)
     17              //    0xc4, 0x51, //02H:
     18              //#elif defined(_SHARE_CRYSTAL_12MHz_)
     19              //    0xc4, 0x11, //02H:
     20              //#elif defined(_SHARE_CRYSTAL_32KHz_)
     21              //    0xc4, 0x01, //02H:
     22              //#else
     23              0xC0, 0x01,
     24              //#endif
     25          
     26              //#if defined(_FM_STEP_50K_)
     27              //    0x1b, 0x92,
     28              //    0x0C, 0x00,
     29              //#else       //Step 100K
     30              0x00, 0x10, //87~108MHz
     31              //0x00,0x18,//76~108MHz
     32              0x04, 0x00,
     33              //#endif
     34          
     35              0x88, 0xad, //05H:
     36              0x80, 0x00,
     37              0x76, 0xc6, //07H
     38              0x5e, 0xc6,
     39              0x00, 0x00,
     40              0x40, 0x6e, //0AH:
     41              0x2d, 0x80,
     42              0x58, 0x03,
     43              0x58, 0x04,
     44              0x58, 0x04,
     45              0x58, 0x04,
     46              0x00, 0x47, //10H:
     47              0x90, 0x00,
     48              0xF5, 0x87,
     49              0x7F, 0x0B, //13H:
     50              0x04, 0xF1,
     51              0x5E, 0xc0, //15H: 0x42, 0xc0
     52              0x41, 0xe0,
     53              0x50, 0x6f,
     54              0x55, 0x92,
     55              0x00, 0x7d,
     56              0x10, 0xC0,//1AH
     57              0x07, 0x80,
     58              0x41, 0x1d,//1CH,
     59              0x40, 0x06,
     60              0x1f, 0x9B,
     61              0x4c, 0x2b,//1FH.
     62              0x81, 0x10, //20H:
     63              0x45, 0xa0,// 21H
     64          
     65              //#if defined(_FM_STEP_50K_)
     66              //    0x55, 0x3F, //22H
     67              //#else
     68              0x19, 0x3F, //22H
     69              //#endif
     70          
     71              0xaf, 0x40,
     72              0x06, 0x81,
     73              0x1b, 0x2a, //25H
     74              0x0D, 0x04,
     75              0x80, 0x9F, //0x80, 0x2F,
     76              0x17, 0x8A,
     77              0xD3, 0x49,
     78              0x11, 0x42,
     79              0xA0, 0xC4, //2BH
     80              0x3E, 0xBB,
     81              0x00, 0x00,
     82              0x58, 0x04,
     83              0x58, 0x04, //2FH
     84              0x58, 0x04,
     85              0x00, 0x74,
     86              0x3D, 0x00,
     87              0x03, 0x0C,
     88              0x2F, 0x68,
     89              0x38, 0x77, //35H
     90          };
     91          

   \                                 In segment FM_INIT_CONST_RDA5807, align 1
     92          IAR_CONST u8 tbl_rda5807h_init[110] =      //更新后的5807，型号5807HP
   \                     tbl_rda5807h_init:
   \   000000   C0010010     DB 192, 1, 0, 16, 4, 0, 136, 176, 64, 0, 126, 198, 0, 0, 0, 0, 0, 0, 0
   \            040088B0
   \            40007EC6
   \            00000000
   \            000000  
   \   000013   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 25, 42, 17, 0, 46, 42, 48, 184
   \            00000000
   \            00000600
   \            192A1100
   \            2E2A30B8
   \   000027   3C90002A     DB 60, 144, 0, 42, 145, 132, 18, 0, 168, 196, 0, 224, 0, 48, 29, 129
   \            91841200
   \            A8C400E0
   \            00301D81
   \   000037   6A460800     DB 106, 70, 8, 0, 134, 6, 97, 0, 0, 16, 158, 37, 74, 4, 8, 12, 22, 225
   \            86066100
   \            00109E25
   \            4A04080C
   \            16E1    
   \   000049   053B6C2B     DB 5, 59, 108, 43, 236, 9, 15, 52, 20, 20, 80, 9, 109, 45, 150, 1, 218
   \            EC090F34
   \            14145009
   \            6D2D9601
   \            DA      
   \   00005A   2A7B0821     DB 42, 123, 8, 33, 19, 213, 72, 145, 0, 188, 8, 150, 21, 60, 11, 128
   \            13D54891
   \            00BC0896
   \            153C0B80
   \   00006A   25C70000     DB 37, 199, 0, 0
     93          {
     94              0xc0,0x01,
     95              0x00, 0x10,
     96              0x04, 0x00,
     97              0x88, 0xB0, //05h://86    如打开20H寄存器，可在此调搜台个数,与SP版一样，0X80搜台最多
     98              0x40,0x00,
     99              0x7E,0xc6,
    100                                  //以下寄存器配置不可省去
    101              0x00,0x00,
    102              0x00,0x00,
    103              0x00,0x00,  //0x0ah
    104              0x00,0x00,
    105              0x00,0x00,
    106              0x00,0x00,
    107              0x00,0x00,
    108              0x00,0x00,
    109              0x00,0x06,  //0x10h
    110              0x00,0x19,// //0x00,0x09,//0830
    111              0x2a,0x11,
    112              0x00,0x2e,
    113              0x2a,0x30,
    114              0xb8,0x3c,  //0x15h
    115              0x90,0x00,
    116              0x2a,0x91,
    117              0x84,0x12,
    118              0x00,0xa8,
    119              0xc4,0x00,  //0x1ah
    120              0xe0,0x00,
    121              0x30,0x1d,//0x24,0x9d,1ch
    122              0x81,0x6a,
    123              0x46,0x08,
    124              0x00,0x86,  //0x1fh
    125              0x06,0x61,// 0x16,0x61, 20h  //0X16为打开第05H寄存器，可在05H调搜台数
    126              0x00,0x00,
    127              0x10,0x9e,
    128              0x25,0x4A,//0x24,0Xc9台多  //   0x23,0x46 //0x25,0x4a //0x25,0xCB  //0x26,0x4c台相对少,但清楚台更多，根据客户需求选择  //23h  搜台门限值调整
    129              0x04,0x08,//0830
    130              0x0c,0x16,  //0x06,0x08,//0830  //0x25h
    131              0xe1,0x05,
    132              0x3b,0x6c,
    133              0x2b,0xec,
    134              0x09,0x0f,
    135              0x34,0x14,  //0x2ah
    136              0x14,0x50,
    137              0x09,0x6d,
    138              0x2d,0x96,
    139              0x01,0xda,
    140              0x2a,0x7b,
    141              0x08,0x21,   //0x30h
    142              0x13,0xd5,
    143              0x48,0x91,
    144              0x00,0xbc,
    145              0x08,0x96,//0830  0x34h
    146              0x15,0x3c,
    147              0x0b,0x80,
    148              0x25,0xc7,
    149              0x00,0x00,
    150          };
    151          

   \                                 In segment FM_INIT_CONST_RDA5807, align 1
    152          IAR_CONST u8 tbl_rda5807m_init[70] =    //更新后的5807，型号5807MP
   \                     tbl_rda5807m_init:
   \   000000   C0050012     DB 192, 5, 0, 18, 4, 0, 134, 173, 96, 0, 118, 198, 0, 0, 0, 0, 0, 0, 0
   \            040086AD
   \            600076C6
   \            00000000
   \            000000  
   \   000013   00000000     DB 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 25, 42, 17, 128, 83, 34, 17, 248
   \            00000000
   \            00000000
   \            192A1180
   \            532211F8
   \   000027   30C0002A     DB 48, 192, 0, 42, 145, 148, 0, 0, 168, 196, 0, 224, 0, 58, 20, 129
   \            91940000
   \            A8C400E0
   \            003A1481
   \   000037   6A460800     DB 106, 70, 8, 0, 134, 6, 97, 0, 0, 16, 158, 34, 68, 4, 8
   \            86066100
   \            00109E22
   \            440408  
    153          {
    154            //  #if defined(_SHARE_CRYSTAL_24MHz_)
    155          //    0xC4, 0x51, //02H:
    156          //#elif defined(_SHARE_CRYSTAL_12MHz_)
    157          //    0xC4, 0x11, //02H:
    158          //#elif defined(_SHARE_CRYSTAL_32KHz_)
    159          //    0xC4, 0x01, //02H:
    160          
    161              0xC0, 0x05,
    162          //#endif
    163              0x00, 0x12,
    164              0x04, 0x00,
    165              0x86, 0xad, //05h
    166              0x60, 0x00,
    167              0x76, 0xc6,
    168              0x00, 0x00,
    169              0x00, 0x00,
    170              0x00, 0x00,  //0x0ah
    171              0x00, 0x00,
    172              0x00, 0x00,
    173              0x00, 0x00,
    174              0x00, 0x00,
    175              0x00, 0x00,
    176              0x00, 0x00,  //0x10h
    177              0x00, 0x19,
    178              0x2a, 0x11,
    179              0x80, 0x53,
    180              0x22, 0x11,
    181              0xf8, 0x30,  //0x15h
    182              0xc0, 0x00,
    183              0x2a, 0x91,
    184              0x94, 0x00,
    185              0x00, 0xa8,
    186              0xc4, 0x00,  //0x1ah
    187              0xe0, 0x00,
    188              0x3a, 0x14,  //0x1ch
    189              0x81, 0x6a,
    190              0x46, 0x08,
    191              0x00, 0x86,
    192              0x06, 0x61,  //0x20h
    193              0x00, 0x00,
    194              0x10, 0x9e,
    195              0x22, 0x44,
    196              0x04, 0x08,  //0x24h
    197          };
    198          
    199          #pragma constseg=default
    200          
    201          //将读取RDA5807芯片的寄存器，从0xA开始。
    202          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    203          void fm_rda5807_read(u8 len)
   \                     fm_rda5807_read:
    204          {
   \   000000   7404         MOV     A,#0x4
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 7
   \   000005                ; Auto size: 0
   \   000005   89..         MOV     ?V0 + 1,R1
    205              u8 i;
    206              if (len == 0) {
   \   000007   E9           MOV     A,R1
   \   000008   603E         JZ      ??fm_rda5807_read_0
    207                  return;
    208              }
    209              //sys_ctl.iic_work_sta = 1;
    210              iic_start();
   \   00000A                ; Setup parameters for call to function iic_start
   \   00000A   12....       LCALL   iic_start & 0xFFFF
    211              iic_sendbyte(0x21);                 //连续写命令
   \   00000D                ; Setup parameters for call to function iic_sendbyte
   \   00000D   7921         MOV     R1,#0x21
   \   00000F   12....       LCALL   ?Subroutine0
    212              iic_getack();
    213              for (i=0; i!=len-1; i++) {
   \                     ??CrossCallReturnLabel_0:
   \   000012   8E..         MOV     ?V0 + 0,R6
   \   000014   8008         SJMP    ??fm_rda5807_read_1
    214                  fm_ctl.r_reg[i] = iic_getbyte();
   \                     ??fm_rda5807_read_2:
   \   000016                ; Setup parameters for call to function iic_getbyte
   \   000016   12....       LCALL   ?Subroutine1
    215                  iic_sendack();
   \                     ??CrossCallReturnLabel_3:
   \   000019                ; Setup parameters for call to function iic_sendack
   \   000019   12....       LCALL   iic_sendack & 0xFFFF
    216              }
   \   00001C   05..         INC     ?V0 + 0
   \                     ??fm_rda5807_read_1:
   \   00001E   85..82       MOV     DPL,?V0 + 0
   \   000021   A882         MOV     R0,DPL
   \   000023   E8           MOV     A,R0
   \   000024   24..         ADD     A,#((fm_ctl + 10) & 0xff)
   \   000026   FE           MOV     R6,A
   \   000027   E4           CLR     A
   \   000028   34..         ADDC    A,#(((fm_ctl + 10) >> 8) & 0xff)
   \   00002A   FF           MOV     R7,A
   \   00002B   85....       MOV     ?V0 + 2,?V0 + 1
   \   00002E   74FF         MOV     A,#-0x1
   \   000030   25..         ADD     A,?V0 + 2
   \   000032   FA           MOV     R2,A
   \   000033   74FF         MOV     A,#-0x1
   \   000035   3400         ADDC    A,#0x0
   \   000037   FB           MOV     R3,A
   \   000038   EA           MOV     A,R2
   \   000039   68           XRL     A,R0
   \   00003A   7001         JNZ     ??fm_rda5807_read_3
   \   00003C   EB           MOV     A,R3
   \                     ??fm_rda5807_read_3:
   \   00003D   70D7         JNZ     ??fm_rda5807_read_2
    217              fm_ctl.r_reg[i] = iic_getbyte();
   \   00003F                ; Setup parameters for call to function iic_getbyte
   \   00003F   12....       LCALL   ?Subroutine1
    218              iic_sendnack();
   \                     ??CrossCallReturnLabel_4:
   \   000042                ; Setup parameters for call to function iic_sendnack
   \   000042   12....       LCALL   iic_sendnack & 0xFFFF
    219              iic_stop();
   \   000045                ; Setup parameters for call to function iic_stop
   \   000045   12....       LCALL   iic_stop & 0xFFFF
    220             // sys_ctl.iic_work_sta = 0;
    221          }
   \                     ??fm_rda5807_read_0:
   \   000048                REQUIRE ?Subroutine2
   \   000048                ; // Fall through to label ?Subroutine2

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
   \                     ?Subroutine2:
   \   000000   7F04         MOV     R7,#0x4
   \   000002   02....       LJMP    ?BANKED_LEAVE_SP

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
   \                     ?Subroutine1:
   \   000000   12....       LCALL   iic_getbyte & 0xFFFF
   \   000003   E9           MOV     A,R1
   \   000004   8E82         MOV     DPL,R6
   \   000006   8F83         MOV     DPH,R7
   \   000008   F0           MOVX    @DPTR,A
   \   000009   22           RET

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
   \                     ?Subroutine0:
   \   000000   12....       LCALL   iic_sendbyte & 0xFFFF
   \   000003                ; Setup parameters for call to function iic_getack
   \   000003                ; Setup parameters for call to function iic_getack
   \   000003                ; Setup parameters for call to function iic_getack
   \   000003   12....       LCALL   iic_getack & 0xFFFF
   \   000006   22           RET
    222          
    223          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    224          void fm_rda5807_write_a(u8 *buf, u8 len)
   \                     fm_rda5807_write_a:
    225          {
   \   000000   7404         MOV     A,#0x4
   \   000002   12....       LCALL   ?FUNC_ENTER_SP
   \   000005                ; Saved register size: 7
   \   000005                ; Auto size: 0
   \   000005   EA           MOV     A,R2
   \   000006   FE           MOV     R6,A
   \   000007   EB           MOV     A,R3
   \   000008   FF           MOV     R7,A
   \   000009   89..         MOV     ?V0 + 1,R1
    226              u8 i;
    227              if (len == 0) {
   \   00000B   E9           MOV     A,R1
   \   00000C   6028         JZ      ??fm_rda5807_write_a_0
    228                  return;
    229              }
    230              iic_start();
   \   00000E                ; Setup parameters for call to function iic_start
   \   00000E   12....       LCALL   iic_start & 0xFFFF
    231              iic_sendbyte(0x20);                 //连续写命令
   \   000011                ; Setup parameters for call to function iic_sendbyte
   \   000011   7920         MOV     R1,#0x20
   \   000013   12....       LCALL   ?Subroutine0
    232              iic_getack();
    233              for (i=0; i!=len; i++) {
   \                     ??CrossCallReturnLabel_1:
   \   000016   75..00       MOV     ?V0 + 0,#0x0
    234                  iic_sendbyte(buf[i]);
   \                     ??fm_rda5807_write_a_1:
   \   000019                ; Setup parameters for call to function iic_sendbyte
   \   000019   85....       MOV     ?V0 + 2,?V0 + 0
   \   00001C   EE           MOV     A,R6
   \   00001D   25..         ADD     A,?V0 + 2
   \   00001F   F582         MOV     DPL,A
   \   000021   EF           MOV     A,R7
   \   000022   3400         ADDC    A,#0x0
   \   000024   F583         MOV     DPH,A
   \   000026   E0           MOVX    A,@DPTR
   \   000027   F9           MOV     R1,A
   \   000028   12....       LCALL   ?Subroutine0
    235                  iic_getack();
    236              }
   \                     ??CrossCallReturnLabel_2:
   \   00002B   05..         INC     ?V0 + 0
   \   00002D   E5..         MOV     A,?V0 + 1
   \   00002F   65..         XRL     A,?V0 + 0
   \   000031   70E6         JNZ     ??fm_rda5807_write_a_1
    237              iic_stop();
   \   000033                ; Setup parameters for call to function iic_stop
   \   000033   12....       LCALL   iic_stop & 0xFFFF
    238          }
   \                     ??fm_rda5807_write_a_0:
   \   000036   80..         SJMP    ?Subroutine2
    239          
    240          //将数据写入RDA5807芯片的寄存器中，从0x2开始
    241          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    242          void fm_rda5807_write(u8 len)
   \                     fm_rda5807_write:
    243          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    244              fm_rda5807_write_a(fm_ctl.w_reg, len);
   \   000000                ; Setup parameters for call to function fm_rda5807_write_a
   \   000000   7A..         MOV     R2,#(fm_ctl & 0xff)
   \   000002   7B..         MOV     R3,#((fm_ctl >> 8) & 0xff)
   \   000004   90....       MOV     DPTR,#(fm_rda5807_write_a & 0xffff)
   \   000007   74..         MOV     A,#((fm_rda5807_write_a >> 16) & 0xff)
   \   000009                REQUIRE ?Subroutine3
   \   000009                ; // Fall through to label ?Subroutine3
    245          }

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
   \                     ?Subroutine3:
   \   000000   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
   \   000003   02....       LJMP    ?BRET
    246          
    247          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    248          void fmrda5807_set_vol(u8 vol)
   \                     fmrda5807_set_vol:
    249          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    250              if(vol > 15)
   \   000000   E9           MOV     A,R1
   \   000001   C3           CLR     C
   \   000002   9410         SUBB    A,#0x10
   \   000004   4002         JC      ??fmrda5807_set_vol_0
    251                  vol = 15;
   \   000006   790F         MOV     R1,#0xf
    252          
    253              fm_ctl.w_reg[7] &=~0x0F;
    254              fm_ctl.w_reg[7] |= vol;
   \                     ??fmrda5807_set_vol_0:
   \   000008   90....       MOV     DPTR,#(fm_ctl + 7)
   \   00000B   E0           MOVX    A,@DPTR
   \   00000C   54F0         ANL     A,#0xf0
   \   00000E   49           ORL     A,R1
   \   00000F   F0           MOVX    @DPTR,A
    255          
    256              fm_ctl.w_reg[3] &= ~BIT(4);  //03H.4=0,disable tune
   \   000010   90....       MOV     DPTR,#(fm_ctl + 3)
   \   000013   E0           MOVX    A,@DPTR
   \   000014   C2E4         CLR     0xE0 /* A   */.4
   \   000016   F0           MOVX    @DPTR,A
    257              fm_rda5807_write(8);
   \   000017                ; Setup parameters for call to function fm_rda5807_write
   \   000017   7908         MOV     R1,#0x8
   \   000019   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   00001C   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   00001E   80..         SJMP    ?Subroutine3
    258          }
    259          
    260          
    261          
    262          //RDA5807 调台
    263          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    264          void rda5807_set_freq(u16 freq)
   \                     rda5807_set_freq:
    265          {
   \   000000   C0..         PUSH    ?V0 + 0
   \   000002   C0..         PUSH    ?V0 + 1
   \   000004                ; Saved register size: 2
   \   000004                ; Auto size: 0
    266              if (freq < 7600 || freq > 10800) {
   \   000004   C3           CLR     C
   \   000005   EA           MOV     A,R2
   \   000006   94B0         SUBB    A,#-0x50
   \   000008   EB           MOV     A,R3
   \   000009   941D         SUBB    A,#0x1d
   \   00000B   404D         JC      ??rda5807_set_freq_0
   \   00000D   C3           CLR     C
   \   00000E   EA           MOV     A,R2
   \   00000F   9431         SUBB    A,#0x31
   \   000011   EB           MOV     A,R3
   \   000012   942A         SUBB    A,#0x2a
   \   000014   5044         JNC     ??rda5807_set_freq_0
    267                  return;
    268              }
    269             // u8 try_cnt = 2;
    270          
    271              freq = (freq - 7600) / 10;
   \   000016   7450         MOV     A,#0x50
   \   000018   2A           ADD     A,R2
   \   000019   F8           MOV     R0,A
   \   00001A   74E2         MOV     A,#-0x1e
   \   00001C   3B           ADDC    A,R3
   \   00001D   F9           MOV     R1,A
   \   00001E   7A0A         MOV     R2,#0xa
   \   000020   7B00         MOV     R3,#0x0
   \   000022   12....       LCALL   ?US_DIV_MOD
   \   000025   88..         MOV     ?V0 + 0,R0
   \   000027   89..         MOV     ?V0 + 1,R1
   \   000029   AA..         MOV     R2,?V0 + 0
    272             // while (try_cnt--)
    273              //{
    274              fm_ctl.w_reg[0] |= BIT(6);
   \   00002B   90....       MOV     DPTR,#fm_ctl
   \   00002E   E0           MOVX    A,@DPTR
   \   00002F   D2E6         SETB    0xE0 /* A   */.6
   \   000031   F0           MOVX    @DPTR,A
    275              fm_ctl.w_reg[2] = freq >> 2;
   \   000032   7402         MOV     A,#0x2
   \   000034   78..         MOV     R0,#?V0 + 0
   \   000036   12....       LCALL   ?US_SHR
   \   000039   E5..         MOV     A,?V0 + 0
   \   00003B   90....       MOV     DPTR,#(fm_ctl + 2)
   \   00003E   F0           MOVX    @DPTR,A
    276              fm_ctl.w_reg[3] = ((freq & 0x3) << 6) | BIT(4) | BIT(3);
   \   00003F   EA           MOV     A,R2
   \   000040   C4           SWAP    A
   \   000041   33           RLC     A
   \   000042   33           RLC     A
   \   000043   54C0         ANL     A,#0xc0
   \   000045   4418         ORL     A,#0x18
   \   000047   90....       MOV     DPTR,#(fm_ctl + 3)
   \   00004A   F0           MOVX    @DPTR,A
    277              fm_rda5807_write(4);
   \   00004B                ; Setup parameters for call to function fm_rda5807_write
   \   00004B   7904         MOV     R1,#0x4
   \   00004D   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   000050   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   000052   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    278              //}
    279              //delay_5ms(11);                      //wait 50ms
    280              delay_5ms(18);
   \   000055                ; Setup parameters for call to function delay_5ms
   \   000055   7912         MOV     R1,#0x12
   \   000057   12....       LCALL   delay_5ms & 0xFFFF
    281          }
   \                     ??rda5807_set_freq_0:
   \   00005A   D0..         POP     ?V0 + 1
   \   00005C   D0..         POP     ?V0 + 0
   \   00005E   02....       LJMP    ?BRET
    282          
    283          
    284          //RDA5807 调台
    285          #pragma location="FM_SEG_RDA5807"

   \                                 In segment FM_SEG_RDA5807, align 1, keep-with-next
    286          bool fm_rda5807_set_freq(u16 freq)
   \                     fm_rda5807_set_freq:
    287          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003   EF           MOV     A,R7
   \   000004   C0E0         PUSH    A
   \   000006                ; Saved register size: 2
   \   000006                ; Auto size: 0
   \   000006   EA           MOV     A,R2
   \   000007   FE           MOV     R6,A
   \   000008   EB           MOV     A,R3
   \   000009   FF           MOV     R7,A
    288              fmrda5807_set_vol(0);
   \   00000A                ; Setup parameters for call to function fmrda5807_set_vol
   \   00000A   7900         MOV     R1,#0x0
   \   00000C   90....       MOV     DPTR,#(fmrda5807_set_vol & 0xffff)
   \   00000F   74..         MOV     A,#((fmrda5807_set_vol >> 16) & 0xff)
   \   000011   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    289              rda5807_set_freq(freq);
   \   000014                ; Setup parameters for call to function rda5807_set_freq
   \   000014   EE           MOV     A,R6
   \   000015   FA           MOV     R2,A
   \   000016   EF           MOV     A,R7
   \   000017   FB           MOV     R3,A
   \   000018   90....       MOV     DPTR,#(rda5807_set_freq & 0xffff)
   \   00001B   74..         MOV     A,#((rda5807_set_freq >> 16) & 0xff)
   \   00001D   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    290              do {
    291                  fm_rda5807_read(4);
   \                     ??fm_rda5807_set_freq_0:
   \   000020                ; Setup parameters for call to function fm_rda5807_read
   \   000020   7904         MOV     R1,#0x4
   \   000022   90....       MOV     DPTR,#(fm_rda5807_read & 0xffff)
   \   000025   74..         MOV     A,#((fm_rda5807_read >> 16) & 0xff)
   \   000027   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    292              } while (0 == (fm_ctl.r_reg[3] & BIT(7)));      //FM_READY
   \   00002A   90....       MOV     DPTR,#(fm_ctl + 13)
   \   00002D   E0           MOVX    A,@DPTR
   \   00002E   A2E7         MOV     C,0xE0 /* A   */.7
   \   000030   50EE         JNC     ??fm_rda5807_set_freq_0
    293              if (fm_ctl.r_reg[2] & BIT(0)) {                 //FM_TRUE
   \   000032   90....       MOV     DPTR,#(fm_ctl + 12)
   \   000035   E0           MOVX    A,@DPTR
   \   000036   A2E0         MOV     C,0xE0 /* A   */.0
   \   000038   500D         JNC     ??fm_rda5807_set_freq_1
    294                  fmrda5807_set_vol(15);
   \   00003A                ; Setup parameters for call to function fmrda5807_set_vol
   \   00003A   790F         MOV     R1,#0xf
   \   00003C   90....       MOV     DPTR,#(fmrda5807_set_vol & 0xffff)
   \   00003F   74..         MOV     A,#((fmrda5807_set_vol >> 16) & 0xff)
   \   000041   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    295                  return true;
   \   000044   D3           SETB    C
   \   000045   8001         SJMP    ??fm_rda5807_set_freq_2
    296              }
    297              return false;
   \                     ??fm_rda5807_set_freq_1:
   \   000047   C3           CLR     C
   \                     ??fm_rda5807_set_freq_2:
   \   000048   D0E0         POP     A
   \   00004A   FF           MOV     R7,A
   \   00004B   D0E0         POP     A
   \   00004D   FE           MOV     R6,A
   \   00004E   02....       LJMP    ?BRET
    298          }
    299          //将数据写入RDA5807芯片的寄存器中，从0x2开始
    300          #pragma location="FM_INIT_RDA5807"

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
    301          void fm_rda5807_write_tbl(void *tbl_init, u8 len)
   \                     fm_rda5807_write_tbl:
    302          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003                ; Saved register size: 1
   \   000003                ; Auto size: 0
   \   000003   EA           MOV     A,R2
   \   000004   FC           MOV     R4,A
   \   000005   EB           MOV     A,R3
   \   000006   FD           MOV     R5,A
   \   000007   E9           MOV     A,R1
   \   000008   FE           MOV     R6,A
    303              smemcpy((void *)0x8000, (void *)tbl_init, len);
   \   000009                ; Setup parameters for call to function smemcpy
   \   000009   7A00         MOV     R2,#0x0
   \   00000B   7B80         MOV     R3,#-0x80
   \   00000D   12....       LCALL   smemcpy & 0xFFFF
    304              fm_rda5807_write_a((u8 *)0x8000, len);
   \   000010                ; Setup parameters for call to function fm_rda5807_write_a
   \   000010   EE           MOV     A,R6
   \   000011   F9           MOV     R1,A
   \   000012   7A00         MOV     R2,#0x0
   \   000014   7B80         MOV     R3,#-0x80
   \   000016   90....       MOV     DPTR,#(fm_rda5807_write_a & 0xffff)
   \   000019   74..         MOV     A,#((fm_rda5807_write_a >> 16) & 0xff)
   \   00001B   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    305          }
   \   00001E                REQUIRE ?Subroutine4
   \   00001E                ; // Fall through to label ?Subroutine4

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
   \                     ?Subroutine4:
   \   000000   D0E0         POP     A
   \   000002   FE           MOV     R6,A
   \   000003   02....       LJMP    ?BRET
    306          
    307          #pragma location="FM_INIT_RDA5807"

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
    308          bool fm_rda5807chip_init(char *tbl_init, u8 tbl_size)
   \                     fm_rda5807chip_init:
    309          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003   EF           MOV     A,R7
   \   000004   C0E0         PUSH    A
   \   000006   C0..         PUSH    ?V0 + 0
   \   000008                ; Saved register size: 3
   \   000008                ; Auto size: 0
   \   000008   EA           MOV     A,R2
   \   000009   FE           MOV     R6,A
   \   00000A   EB           MOV     A,R3
   \   00000B   FF           MOV     R7,A
   \   00000C   89..         MOV     ?V0 + 0,R1
    310              smemcpy(fm_ctl.w_reg, tbl_init, 8);
   \   00000E                ; Setup parameters for call to function smemcpy
   \   00000E   7908         MOV     R1,#0x8
   \   000010   EE           MOV     A,R6
   \   000011   FC           MOV     R4,A
   \   000012   EF           MOV     A,R7
   \   000013   FD           MOV     R5,A
   \   000014   7A..         MOV     R2,#(fm_ctl & 0xff)
   \   000016   7B..         MOV     R3,#((fm_ctl >> 8) & 0xff)
   \   000018   12....       LCALL   smemcpy & 0xFFFF
    311          
    312              fm_rda5807_write(2);
   \   00001B                ; Setup parameters for call to function fm_rda5807_write
   \   00001B   7902         MOV     R1,#0x2
   \   00001D   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   000020   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   000022   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    313              delay_5ms(15);
   \   000025                ; Setup parameters for call to function delay_5ms
   \   000025   790F         MOV     R1,#0xf
   \   000027   12....       LCALL   delay_5ms & 0xFFFF
    314              fm_rda5807_write_tbl(tbl_init, tbl_size);
   \   00002A                ; Setup parameters for call to function fm_rda5807_write_tbl
   \   00002A   A9..         MOV     R1,?V0 + 0
   \   00002C   EE           MOV     A,R6
   \   00002D   FA           MOV     R2,A
   \   00002E   EF           MOV     A,R7
   \   00002F   FB           MOV     R3,A
   \   000030   90....       MOV     DPTR,#(fm_rda5807_write_tbl & 0xffff)
   \   000033   74..         MOV     A,#((fm_rda5807_write_tbl >> 16) & 0xff)
   \   000035   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    315              delay_5ms(15);
   \   000038                ; Setup parameters for call to function delay_5ms
   \   000038   790F         MOV     R1,#0xf
   \   00003A   12....       LCALL   delay_5ms & 0xFFFF
    316          
    317              fm_ctl.w_reg[7] &= ~0x0F;
    318              fm_ctl.w_reg[7] |= 15;
   \   00003D   90....       MOV     DPTR,#(fm_ctl + 7)
   \   000040   E0           MOVX    A,@DPTR
   \   000041   440F         ORL     A,#0xf
   \   000043   F0           MOVX    @DPTR,A
    319          
    320              fm_ctl.w_reg[3] &= ~BIT(4);  //03H.4=0,disable tune
   \   000044   90....       MOV     DPTR,#(fm_ctl + 3)
   \   000047   E0           MOVX    A,@DPTR
   \   000048   C2E4         CLR     0xE0 /* A   */.4
   \   00004A   F0           MOVX    @DPTR,A
    321              fm_rda5807_write(8);
   \   00004B                ; Setup parameters for call to function fm_rda5807_write
   \   00004B   7908         MOV     R1,#0x8
   \   00004D   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   000050   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   000052   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    322              delay_5ms(11);
   \   000055                ; Setup parameters for call to function delay_5ms
   \   000055   790B         MOV     R1,#0xb
   \   000057   12....       LCALL   delay_5ms & 0xFFFF
    323          
    324          /*
    325              fm_ctl.w_reg[0] |= BIT(6);
    326              fm_ctl.w_reg[2] = 5 >> 2;
    327              fm_ctl.w_reg[3] = ((5 & 0x3) << 6) | BIT(4);
    328              fm_rda5807_write(4);
    329              delay_5ms(1);
    330          */
    331              return true;
   \   00005A   D3           SETB    C
   \   00005B   D0..         POP     ?V0 + 0
   \   00005D   D0E0         POP     A
   \   00005F   FF           MOV     R7,A
   \   000060   80..         SJMP    ?Subroutine4
    332          }
    333          
    334          #pragma location="FM_INIT_RDA5807"

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
    335          u16 fm_rda5807_readid(void)
   \                     fm_rda5807_readid:
    336          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    337              fm_ctl.w_reg[0] = 0x00;             //复位模块
   \   000000   E4           CLR     A
   \   000001   90....       MOV     DPTR,#fm_ctl
   \   000004   F0           MOVX    @DPTR,A
    338              fm_ctl.w_reg[1] = BIT(1);
   \   000005   7402         MOV     A,#0x2
   \   000007   90....       MOV     DPTR,#(fm_ctl + 1)
   \   00000A   F0           MOVX    @DPTR,A
    339              fm_rda5807_write(2);
   \   00000B                ; Setup parameters for call to function fm_rda5807_write
   \   00000B   F9           MOV     R1,A
   \   00000C   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   00000F   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   000011   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    340              delay_5ms(11);
   \   000014                ; Setup parameters for call to function delay_5ms
   \   000014   790B         MOV     R1,#0xb
   \   000016   12....       LCALL   delay_5ms & 0xFFFF
    341              fm_rda5807_read(10);                //读ID
   \   000019                ; Setup parameters for call to function fm_rda5807_read
   \   000019   790A         MOV     R1,#0xa
   \   00001B   90....       MOV     DPTR,#(fm_rda5807_read & 0xffff)
   \   00001E   74..         MOV     A,#((fm_rda5807_read >> 16) & 0xff)
   \   000020   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    342              //printf("CHIP ID: %04x\n", LOAD_U16B(&fm_ctl.r_reg[8]));
    343              return LOAD_U16B(&fm_ctl.r_reg[8]);
   \   000023                ; Setup parameters for call to function load_u16
   \   000023   7A..         MOV     R2,#((fm_ctl + 18) & 0xff)
   \   000025   7B..         MOV     R3,#(((fm_ctl + 18) >> 8) & 0xff)
   \   000027   12....       LCALL   load_u16 & 0xFFFF
   \   00002A   02....       LJMP    ?BRET
    344          }
    345          
    346          #pragma location="FM_INIT_RDA5807"

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
    347          bool fm_rda5807_init(void)
   \                     fm_rda5807_init:
    348          {
   \   000000   EE           MOV     A,R6
   \   000001   C0E0         PUSH    A
   \   000003   C0..         PUSH    ?V0 + 0
   \   000005   C0..         PUSH    ?V0 + 1
   \   000007                ; Saved register size: 3
   \   000007                ; Auto size: 0
    349              u16 chip_id;
    350          
    351              for(u8 i=0; i<3; i++){      //IIC与其他引脚复用时 FM ID 改为读三次比较保险
   \   000007   7E00         MOV     R6,#0x0
   \   000009   801B         SJMP    ??fm_rda5807_init_0
    352                  chip_id = fm_rda5807_readid();
    353                  //printf("rid:%04x\n",chip_id);
    354                  if(chip_id == 0x5804 || chip_id == 0x5801 || chip_id == 0x5808){
   \                     ??fm_rda5807_init_1:
   \   00000B   7401         MOV     A,#0x1
   \   00000D   68           XRL     A,R0
   \   00000E   7003         JNZ     ??fm_rda5807_init_2
   \   000010   7458         MOV     A,#0x58
   \   000012   69           XRL     A,R1
   \                     ??fm_rda5807_init_2:
   \   000013   603B         JZ      ??fm_rda5807_init_3
   \   000015   7408         MOV     A,#0x8
   \   000017   68           XRL     A,R0
   \   000018   7003         JNZ     ??fm_rda5807_init_4
   \   00001A   7458         MOV     A,#0x58
   \   00001C   69           XRL     A,R1
   \                     ??fm_rda5807_init_4:
   \   00001D   6039         JZ      ??fm_rda5807_init_5
   \   00001F   0E           INC     R6
   \   000020   EE           MOV     A,R6
   \   000021   C3           CLR     C
   \   000022   9403         SUBB    A,#0x3
   \   000024   503A         JNC     ??fm_rda5807_init_6
   \                     ??fm_rda5807_init_0:
   \   000026                ; Setup parameters for call to function fm_rda5807_readid
   \   000026   90....       MOV     DPTR,#(fm_rda5807_readid & 0xffff)
   \   000029   74..         MOV     A,#((fm_rda5807_readid >> 16) & 0xff)
   \   00002B   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
   \   00002E   8A..         MOV     ?V0 + 0,R2
   \   000030   8B..         MOV     ?V0 + 1,R3
   \   000032   A8..         MOV     R0,?V0 + 0
   \   000034   A9..         MOV     R1,?V0 + 1
   \   000036   7404         MOV     A,#0x4
   \   000038   68           XRL     A,R0
   \   000039   7003         JNZ     ??fm_rda5807_init_7
   \   00003B   7458         MOV     A,#0x58
   \   00003D   69           XRL     A,R1
   \                     ??fm_rda5807_init_7:
   \   00003E   70CB         JNZ     ??fm_rda5807_init_1
    355                      break;
    356                  }
    357              }
    358              if (chip_id == 0x5804) {
    359                  return fm_rda5807chip_init((char *)tbl_rda5807p_init, sizeof(tbl_rda5807p_init));
   \   000040                ; Setup parameters for call to function fm_rda5807chip_init
   \   000040   7968         MOV     R1,#0x68
   \   000042   7A..         MOV     R2,#(tbl_rda5807p_init & 0xff)
   \   000044   7B..         MOV     R3,#((tbl_rda5807p_init >> 8) & 0xff)
   \                     ??fm_rda5807_init_8:
   \   000046   90....       MOV     DPTR,#(fm_rda5807chip_init & 0xffff)
   \   000049   74..         MOV     A,#((fm_rda5807chip_init >> 16) & 0xff)
   \   00004B   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
   \   00004E   8011         SJMP    ??fm_rda5807_init_9
    360              } else if (chip_id == 0x5801) {
    361                  return fm_rda5807chip_init((char *)tbl_rda5807h_init, sizeof(tbl_rda5807h_init));
   \                     ??fm_rda5807_init_3:
   \   000050                ; Setup parameters for call to function fm_rda5807chip_init
   \   000050   796E         MOV     R1,#0x6e
   \   000052   7A..         MOV     R2,#(tbl_rda5807h_init & 0xff)
   \   000054   7B..         MOV     R3,#((tbl_rda5807h_init >> 8) & 0xff)
   \   000056   80EE         SJMP    ??fm_rda5807_init_8
    362              } else if (chip_id == 0x5808) {
    363                  return fm_rda5807chip_init((char *)tbl_rda5807m_init, sizeof(tbl_rda5807m_init));
   \                     ??fm_rda5807_init_5:
   \   000058                ; Setup parameters for call to function fm_rda5807chip_init
   \   000058   7946         MOV     R1,#0x46
   \   00005A   7A..         MOV     R2,#(tbl_rda5807m_init & 0xff)
   \   00005C   7B..         MOV     R3,#((tbl_rda5807m_init >> 8) & 0xff)
   \   00005E   80E6         SJMP    ??fm_rda5807_init_8
    364              } else {
    365                  return false;
   \                     ??fm_rda5807_init_6:
   \   000060   C3           CLR     C
   \                     ??fm_rda5807_init_9:
   \   000061   D0..         POP     ?V0 + 1
   \   000063   D0..         POP     ?V0 + 0
   \   000065   02....       LJMP    ?Subroutine4
    366              }
    367          }
    368          
    369          #pragma location="FM_INIT_RDA5807"

   \                                 In segment FM_INIT_RDA5807, align 1, keep-with-next
    370          void fm_rda5807_off(void)
   \                     fm_rda5807_off:
    371          {
   \   000000                ; Saved register size: 0
   \   000000                ; Auto size: 0
    372              fm_ctl.w_reg[1] &= ~BIT(0);
   \   000000   90....       MOV     DPTR,#(fm_ctl + 1)
   \   000003   E0           MOVX    A,@DPTR
   \   000004   C2E0         CLR     0xE0 /* A   */.0
   \   000006   F0           MOVX    @DPTR,A
    373              fm_rda5807_write(2);
   \   000007                ; Setup parameters for call to function fm_rda5807_write
   \   000007   7902         MOV     R1,#0x2
   \   000009   90....       MOV     DPTR,#(fm_rda5807_write & 0xffff)
   \   00000C   74..         MOV     A,#((fm_rda5807_write >> 16) & 0xff)
   \   00000E   12....       LCALL   ?BCALL               ; Banked call to: DPTR()
    374          }
   \   000011   02....       LJMP    ?BRET
    375          
    376          #endif

   Maximum stack usage in bytes:

     Function                  EXT_STACK PSTACK XSTACK
     --------                  --------- ------ ------
     fm_rda5807_init                  3      0      0
       -> fm_rda5807_readid           6      0      0
       -> fm_rda5807chip_init         6      0      0
       -> fm_rda5807chip_init         6      0      0
       -> fm_rda5807chip_init         6      0      0
     fm_rda5807_off                   0      0      0
       -> fm_rda5807_write            0      0      0
     fm_rda5807_read                 10      0      0
       -> iic_start                  14      0      0
       -> iic_sendbyte               14      0      0
       -> iic_getack                 14      0      0
       -> iic_getbyte                14      0      0
       -> iic_sendack                14      0      0
       -> iic_getbyte                14      0      0
       -> iic_sendnack               14      0      0
       -> iic_stop                   14      0      0
     fm_rda5807_readid                3      0      0
       -> fm_rda5807_write            0      0      0
       -> delay_5ms                   0      0      0
       -> fm_rda5807_read             0      0      0
       -> load_u16                    0      0      0
     fm_rda5807_set_freq              2      0      0
       -> fmrda5807_set_vol           4      0      0
       -> rda5807_set_freq            4      0      0
       -> fm_rda5807_read             4      0      0
       -> fmrda5807_set_vol           4      0      0
     fm_rda5807_write                 3      0      0
       -> fm_rda5807_write_a          0      0      0
     fm_rda5807_write_a               8      0      0
       -> iic_start                  14      0      0
       -> iic_sendbyte               14      0      0
       -> iic_getack                 14      0      0
       -> iic_sendbyte               14      0      0
       -> iic_getack                 14      0      0
       -> iic_stop                   14      0      0
     fm_rda5807_write_tbl             4      0      0
       -> smemcpy                     2      0      0
       -> fm_rda5807_write_a          2      0      0
     fm_rda5807chip_init              6      0      0
       -> smemcpy                     6      0      0
       -> fm_rda5807_write            6      0      0
       -> delay_5ms                   6      0      0
       -> fm_rda5807_write_tbl        6      0      0
       -> delay_5ms                   6      0      0
       -> fm_rda5807_write            6      0      0
       -> delay_5ms                   6      0      0
     fmrda5807_set_vol                2      0      0
       -> fm_rda5807_write            0      0      0
     rda5807_set_freq                 4      0      0
       -> fm_rda5807_write            4      0      0
       -> delay_5ms                   4      0      0


   Segment part sizes:

     Function/Label       Bytes
     --------------       -----
     tbl_rda5807p_init     104
     tbl_rda5807h_init     110
     tbl_rda5807m_init      70
     fm_rda5807_read        72
     ?Subroutine2            5
     ?Subroutine1           10
     ?Subroutine0            7
     fm_rda5807_write_a     56
     fm_rda5807_write        9
     ?Subroutine3            6
     fmrda5807_set_vol      32
     rda5807_set_freq       97
     fm_rda5807_set_freq    81
     fm_rda5807_write_tbl   30
     ?Subroutine4            6
     fm_rda5807chip_init    98
     fm_rda5807_readid      45
     fm_rda5807_init       104
     fm_rda5807_off         20

 
 284 bytes in segment FM_INIT_CONST_RDA5807
 303 bytes in segment FM_INIT_RDA5807
 375 bytes in segment FM_SEG_RDA5807
 
 962 bytes of CODE memory

Errors: none
Warnings: none
